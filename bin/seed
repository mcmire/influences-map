#!/usr/bin/env node --trace-warnings --unhandled-rejections=strict

const withGraknClient = require("../server/grakn/withGraknClient");
const Model = require("../server/grakn/Model");

function clearKeyspace(client) {
  console.log("Clearing keyspace...");
  return client.clearKeyspace();
}

function defineSchema(session) {
  console.log("Defining schema...");
  return session.defineSchema((schema) => {
    schema.attribute("name", "string");
    schema.attribute("alias", "string");
    schema.attribute("first-name", "string");
    schema.attribute("last-name", "string");
    schema.attribute("start-date", "datetime");
    schema.attribute("end-date", "datetime");
    schema.attribute("position", "string");
    schema.attribute("source", "string", { regex: "^https?://.+$" });

    schema.relation("employment", {
      relates: ["employee", "employer"],
      has: ["position", "start-date", "end-date", "source"],
      plays: ["employment-source", "employment-target"],
    });
    schema.relation("introduction", {
      relates: ["employment-source", "employment-target"],
      has: ["source"],
    });

    schema.entity("person", {
      has: ["first-name", "last-name", "alias"],
      plays: ["employee"],
    });
    schema.entity("company", { has: ["name", "alias"], plays: ["employer"] });
    schema.entity("show", { has: ["name", "alias"], plays: ["employer"] });
  });
}

async function seedDatabase(session, schemaDefinition) {
  console.log("Seeding database...");

  const model = new Model(session, schemaDefinition);

  console.log("- Creating show");
  const snl = await model.createEntity("show", {
    name: "Saturday Night Live",
    alias: "SNL",
  });
  console.log("- Creating people");
  const conan = await model.createEntity("person", {
    "first-name": "Conan",
    "last-name": "O'Brien",
  });
  const smigel = await model.createEntity("person", {
    "first-name": "Robert",
    "last-name": "Smigel",
  });
  console.log("- Creating employments");
  const conanSnl = await model.createRelation(
    "employment",
    { employer: snl, employee: conan },
    {
      has: {
        position: "writer",
        //"start-date": new Date(1988, 1, 1),
        //"end-date": new Date(1991, 1, 1),
        "start-date": "1988-01-01",
        "end-date": "1991-01-01",
        source: "https://en.wikipedia.org/wiki/Conan_O%27Brien",
      },
    }
  );
  const smigelSnl = await model.createRelation(
    "employment",
    { employer: snl, employee: smigel },
    {
      has: {
        position: "writer",
        //"start-date": new Date(1985, 1, 1),
        //"end-date": new Date(1993, 1, 1),
        "start-date": "1985-01-01",
        "end-date": "1993-01-01",
        source: "https://en.wikipedia.org/wiki/Robert_Smigel",
      },
    }
  );
  await model.createRelation(
    "introduction",
    { "employment-source": conanSnl, "employment-target": smigelSnl },
    {
      has: {
        source: [
          "https://en.wikipedia.org/wiki/Conan_O%27Brien",
          "https://en.wikipedia.org/wiki/Robert_Smigel",
        ],
      },
    }
  );
}

async function main() {
  return withGraknClient(async (client) => {
    await clearKeyspace(client);
    return client.withSession(async (session) => {
      const schemaDefinition = await defineSchema(session);
      await seedDatabase(session, schemaDefinition);
    });
  });
}

main().then(() => {
  console.log("Done!");
  process.exit();
});
